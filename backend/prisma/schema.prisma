// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id             String   @id @default(uuid())
  clerkId        String   @unique
  name           String
  email          String
  role           Role
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
  updatedById    String?

  roleRequests         RoleRequest[] @relation(name: "RoleUpdateRequestor")
  updatedBy            User?         @relation(name: "UpdatedBy", fields: [updatedById], references: [id])

  // updateBy from each table
  updatedRoleRequests   RoleRequest[] @relation(name: "UpdatedBy")
  updatedUsers User[] @relation("UpdatedBy")
}

model RoleRequest {
  id             String             @id @default(uuid())
  userId         String
  requestedRole  Role
  reason         String
  status         RoleRequestStatus @default(pending)
  adminComment   String?
  updatedById    String?           
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt

  user       User  @relation(name: "RoleUpdateRequestor", fields: [userId], references: [id])
  updatedBy  User? @relation(name: "UpdatedBy", fields: [updatedById], references: [id])
}


enum Role {
  admin
  org_admin
  agent
  customer
  unverified
}

enum RoleRequestStatus{
  pending
  approved
  rejected
}